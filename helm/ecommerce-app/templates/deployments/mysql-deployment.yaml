apiVersion: apps/v1
kind: StatefulSet
metadata:
 name: {{ .Release.Name }}-mysql
 labels:
   app: {{ .Values.mysql.name }}
   release: {{ .Release.Name }}
spec:
 replicas: 1
 selector:
   matchLabels:
     app: {{ .Values.mysql.name }}
 serviceName: {{ .Release.Name }}-mysql
 template:
   metadata:
     labels:
       app: {{ .Values.mysql.name }}
       release: {{ .Release.Name }}
   spec:
     initContainers:
     - name: init-mysql
       image: mysql:8.0
       command: ['sh', '-c', 'until mysqladmin ping -h 127.0.0.1 -u root -p${MYSQL_ROOT_PASSWORD}; do echo waiting for mysql; sleep 2; done;']
       envFrom:
         - secretRef:
             name: {{ .Release.Name }}-mysql-secret
     containers:
       - name: mysql
         image: "{{ .Values.mysql.image.repository }}:{{ .Values.mysql.image.tag }}"
         ports:
           - containerPort: 3306
         envFrom:
           - secretRef:
               name: {{ .Release.Name }}-mysql-secret
         volumeMounts:
           - name: mysql-persistent-storage
             mountPath: /var/lib/mysql
         readinessProbe:
           exec:
             command: ['sh', '-c', 'mysqladmin ping -h 127.0.0.1 -u root -p${MYSQL_ROOT_PASSWORD}']
           initialDelaySeconds: 30
           periodSeconds: 10
         livenessProbe:
           exec:
             command: ['sh', '-c', 'mysqladmin ping -h 127.0.0.1 -u root -p${MYSQL_ROOT_PASSWORD}']
           initialDelaySeconds: 60
           periodSeconds: 20
         resources:
           {{- toYaml .Values.mysql.resources | nindent 12 }}
 volumeClaimTemplates:
   - metadata:
       name: mysql-persistent-storage
     spec:
       accessModes:
         - ReadWriteOnce
       storageClassName: {{ .Values.mysql.storageClassName }}
       resources:
         requests:
           storage: {{ .Values.mysql.storage.size }}